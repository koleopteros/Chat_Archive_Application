<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <link rel="stylesheet" href="styles.css">
    <title>chat_archive_application</title>
</head>
<body>
    
    <div class="container">

        <div class="row">

            <div class="col-md-6 offset-md-3 col-sm-12">
                <h1 class="text-center">
                    chat_archive_application
                    <button id="clear" class="btn btn-danger">Clear</button>
                </h1>

                <div id="status"></div>

                <div id="chat">
                    <div class="card">
                        <div id="messages" class="card-block">
                        </div>
                    </div>
                    <br>
                    <textarea id="textarea" class="form-control" placeholder="Enter Message...">
                    </textarea>
                </div>
            </div>
        </div>
    </div>

    <!--
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.dev.js">
    </script>
    -->
    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js">
    </script>

    <!--
    <script src="myscripts.js"></script> This line will be used to import the JS code bellow.
    -->

    <script>
        (function(){

            // Function for getting elements
            var element = function(id){
                return document.getElementById(id);
            }

            // Getting the elements
            var status = element('status');
            var messages = element('messages');
            var textarea = element('textarea');
            var username = element('username');
            var clearBtn = element('clear');

            // Set default status
            var statusDefault =status.textContent;

            var setStatus = function(param){

                // Set status
                status.textContent = param;

                if (param != statusDefault){

                    var delay = setTimeout(function(){
                        setStatus(statusDefault);
                    }, 3000);
                }
            }

            // Connect to socket.io
            // var socket = io.connect('http://127.0.0.1:4000'); // 4000 from the video
            var socket = io.connect('http://127.0.0.1:3000'); // 3000 is specified in server.js

            if (socket != undefined){
                console.log('Connected to socket...');

                // Handling output
                socket.on('output', function(data){

                    // console.log(data);

                    if (data.length) {
                        for (var i = 0; i < data.length; i++) {
                            // Build out message div
                            var message = document.createElement('div');
                            message.setAttribute('class', 'chat-message');
                            message.textContent = data[i].name + ": " + data[i].message;
                            messages.appendChild(message);
                            messages.insertBefore(message, messages.firstChild);
                        }

                    }

                });

                // Getting status from the server
                socket.on('status', function(data){

                    // Getting the message status
                    setStatus((typeof data == 'object')? data.message: data);

                    // If status is clear, clear text
                    if (data.clear) {
                        textarea.value = '';
                    }
                });

                // handle input
                textarea.addEventListener('keydown', function(event){

                    // Event.which === 13 is and Enter key or Return key respectively
                    if (event.which === 13 && event.shiftKey == false){
                        // Emit to server input
                        socket.emit('input', {name:username.value, message:textarea.value});
                    }

                    event.preventDefault();
                });

                // Handle chat clear
                clearBtn.addEventListener('click', function(){
                    socket.emit('clear');
                });

                // Clear message
                socket.on('cleared', function(){
                    messages.textContent = '';
                });
            }

        })();
    </script>

</body>
</html>